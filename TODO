
implement the playbox js interface
----------------------------------
implement the object with the following: (depends on the above)
 Object(Playbox)
  -> ( ) Event(archiveUnknown)
  -> ( ) Event(archiveMetadata)
  -> ( ) Event(archiveDownloading)
  -> ( ) Event(archiveProgress)
  -> ( ) Event(archiveComplete)
  -> ( ) Event(archiveRemoved)
  -> (*) Function(init)
  -> (*) Function(start)
  -> (*) Function(stop)
  -> (+) Function(query) - returns a list of the archives matching the query parameters
  -> (-) Function(archive) - returns an Object with the resulting archive status and a pipe to the archive if it exists
  -> (+) Function(info) - getter/setter which returns an object with the resulting archive status and metadata
  -> ( ) String(library_path) - getter/setter for the library path
  -> ( ) Array(dirs) - getter/setter for the array of source directories
  -> ( ) Number(scan_speed) - MB/s at which to scan the directories
  -> ( ) Function(rescan) - force a directory rescan

implement a basic application framework
---------------------------------------
allow applications to receive function calls over http
allow applications to receive function calls over plain sockets

implement http interface
------------------------
export the following functions to the http interface:
 [-] connect the playbox to the internet, listening on the specified ports
 [o] disconnect the playbox from the network, but maintain the library functioning
 [l] returns a javascript object with the entire library listing
 [g] return the archive to http
  -> 100 waiting for first chunk
  -> 200 + contents of the file
  -> 404 file doesn't exist
 [i] request archive info
  -> 100 waiting for the metadata to be downloaded
  -> 200 + js object with object info
  -> 404 metadata cannot be found on the DHT

implement plain socket interface
--------------------------------
I dunno yet :)

determine mp3 duration, id3 data, etc
-------------------------------------
add the C++ library you saw on that dev website
retain the iconv dependency if the above library isn't sufficient


download metadata from dht extension
------------------------------------
it's a plugin for libtorrent-rasterbar, so it should be easy to implement :)


emit events on the js object
----------------------------
implement a comet sort of system which holds the connection, waiting for the event
for the following events:
...


implement a basic client admin interface
----------------------------------------
implement the following functions:
...
write a clientside js application